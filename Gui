local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer

-- Улучшенные цветовые темы
local Themes = {
    Dark = {
        Main = Color3.fromRGB(30, 30, 35),
        Secondary = Color3.fromRGB(45, 45, 50),
        Accent = Color3.fromRGB(100, 70, 255),
        Text = Color3.fromRGB(240, 240, 245),
        Button = Color3.fromRGB(60, 60, 70),
        ButtonHover = Color3.fromRGB(80, 80, 90),
        Border = Color3.fromRGB(70, 70, 80)
    },
    Light = {
        Main = Color3.fromRGB(250, 250, 252),
        Secondary = Color3.fromRGB(235, 235, 240),
        Accent = Color3.fromRGB(0, 100, 200),
        Text = Color3.fromRGB(20, 20, 25),
        Button = Color3.fromRGB(220, 220, 225),
        ButtonHover = Color3.fromRGB(200, 200, 210),
        Border = Color3.fromRGB(180, 180, 190)
    },
    Aqua = {
        Main = Color3.fromRGB(20, 35, 50),
        Secondary = Color3.fromRGB(30, 50, 70),
        Accent = Color3.fromRGB(0, 180, 230),
        Text = Color3.fromRGB(220, 240, 255),
        Button = Color3.fromRGB(40, 65, 90),
        ButtonHover = Color3.fromRGB(50, 85, 120),
        Border = Color3.fromRGB(0, 140, 180)
    }
}

local currentTheme = Themes.Dark
local currentWindow = nil

-- Функция для создания скругленных кнопок
local function createRoundButton(name, size, position, parent)
    local button = Instance.new("TextButton")
    button.Name = name
    button.Size = size
    button.Position = position
    button.BackgroundColor3 = currentTheme.Button
    button.BorderSizePixel = 0
    button.Text = ""
    button.AutoButtonColor = false
    button.ZIndex = 3
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = button
    
    local stroke = Instance.new("UIStroke")
    stroke.Color = currentTheme.Border
    stroke.Thickness = 1
    stroke.Parent = button
    
    if parent then
        button.Parent = parent
    end
    
    return button
end

-- Функция для создания скругленных фреймов
local function createRoundFrame(name, size, position, parent)
    local frame = Instance.new("Frame")
    frame.Name = name
    frame.Size = size
    frame.Position = position
    frame.BackgroundColor3 = currentTheme.Main
    frame.BorderSizePixel = 0
    frame.ZIndex = 2
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 10)
    corner.Parent = frame
    
    local stroke = Instance.new("UIStroke")
    stroke.Color = currentTheme.Border
    stroke.Thickness = 1
    stroke.Parent = frame
    
    if parent then
        frame.Parent = parent
    end
    
    return frame
end

-- Функция для создания кнопок
local function createButton(text, size, position, parent, callback)
    local button = createRoundButton("Button", size, position, parent)
    
    local label = Instance.new("TextLabel")
    label.Name = "Label"
    label.Size = UDim2.new(1, -20, 1, 0)
    label.Position = UDim2.new(0, 10, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = currentTheme.Text
    label.TextSize = 13
    label.Font = Enum.Font.Gotham
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.ZIndex = 4
    label.Parent = button
    
    -- Анимации при наведении
    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.15), {BackgroundColor3 = currentTheme.ButtonHover}):Play()
    end)
    
    button.MouseLeave:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.15), {BackgroundColor3 = currentTheme.Button}):Play()
    end)
    
    button.MouseButton1Click:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.1), {BackgroundColor3 = currentTheme.Accent}):Play()
        task.wait(0.1)
        TweenService:Create(button, TweenInfo.new(0.1), {BackgroundColor3 = currentTheme.ButtonHover}):Play()
        
        if callback then
            callback()
        end
    end)
    
    return button
end

-- Функция для создания переключателей
local function createToggle(text, size, position, parent, callback, default)
    local toggleButton = createRoundButton("Toggle", size, position, parent)
    toggleButton.BackgroundColor3 = currentTheme.Secondary
    
    local label = Instance.new("TextLabel")
    label.Name = "Label"
    label.Size = UDim2.new(0.7, 0, 1, 0)
    label.Position = UDim2.new(0, 12, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = currentTheme.Text
    label.TextSize = 13
    label.Font = Enum.Font.Gotham
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.ZIndex = 4
    label.Parent = toggleButton
    
    local toggleContainer = createRoundFrame("ToggleContainer", UDim2.new(0, 45, 0, 22), UDim2.new(1, -52, 0.5, -11), toggleButton)
    toggleContainer.BackgroundColor3 = currentTheme.Main
    toggleContainer.ZIndex = 4
    
    local toggleDot = createRoundFrame("ToggleDot", UDim2.new(0, 16, 0, 16), UDim2.new(0, 3, 0.5, -8), toggleContainer)
    toggleDot.BackgroundColor3 = currentTheme.Text
    toggleDot.ZIndex = 5
    
    local isToggled = default or false
    
    local function updateToggle()
        if isToggled then
            TweenService:Create(toggleDot, TweenInfo.new(0.2), {
                Position = UDim2.new(1, -19, 0.5, -8)
            }):Play()
            TweenService:Create(toggleContainer, TweenInfo.new(0.2), {
                BackgroundColor3 = currentTheme.Accent
            }):Play()
        else
            TweenService:Create(toggleDot, TweenInfo.new(0.2), {
                Position = UDim2.new(0, 3, 0.5, -8)
            }):Play()
            TweenService:Create(toggleContainer, TweenInfo.new(0.2), {
                BackgroundColor3 = currentTheme.Main
            }):Play()
        end
    end
    
    updateToggle()
    
    toggleButton.MouseButton1Click:Connect(function()
        isToggled = not isToggled
        updateToggle()
        if callback then
            callback(isToggled)
        end
    end)
    
    return toggleButton, function(state) 
        isToggled = state 
        updateToggle() 
    end
end

-- Функция для создания текстовых полей
local function createTextField(text, size, position, parent, callback, default)
    local textField = createRoundFrame("TextField", size, position, parent)
    textField.BackgroundColor3 = currentTheme.Secondary
    
    local label = Instance.new("TextLabel")
    label.Name = "Label"
    label.Size = UDim2.new(0.35, 0, 1, 0)
    label.Position = UDim2.new(0, 12, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = currentTheme.Text
    label.TextSize = 12
    label.Font = Enum.Font.Gotham
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.ZIndex = 3
    label.Parent = textField
    
    local inputContainer = createRoundFrame("InputContainer", UDim2.new(0.6, -15, 0.6, 0), UDim2.new(0.4, 5, 0.2, 0), textField)
    inputContainer.BackgroundColor3 = currentTheme.Main
    inputContainer.ZIndex = 3
    
    local input = Instance.new("TextBox")
    input.Name = "Input"
    input.Size = UDim2.new(1, -8, 1, 0)
    input.Position = UDim2.new(0, 4, 0, 0)
    input.BackgroundTransparency = 1
    input.TextColor3 = currentTheme.Text
    input.Text = default or ""
    input.TextSize = 12
    input.Font = Enum.Font.Gotham
    input.PlaceholderText = "Введите..."
    input.PlaceholderColor3 = Color3.new(0.6, 0.6, 0.6)
    input.ZIndex = 4
    input.Parent = inputContainer
    
    input.Focused:Connect(function()
        TweenService:Create(inputContainer, TweenInfo.new(0.2), {
            BackgroundColor3 = currentTheme.Accent
        }):Play()
    end)
    
    input.FocusLost:Connect(function()
        TweenService:Create(inputContainer, TweenInfo.new(0.2), {
            BackgroundColor3 = currentTheme.Main
        }):Play()
        if callback then
            callback(input.Text)
        end
    end)
    
    local textFieldLibrary = {}
    
    function textFieldLibrary:SetText(value)
        input.Text = value
    end
    
    function textFieldLibrary:GetText()
        return input.Text
    end
    
    return textField, textFieldLibrary
end

-- Создание главного окна
local function createWindow(title, size, position)
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = title
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    screenGui.Enabled = false -- Сначала скрыто
    
    -- Защита GUI
    if syn and syn.protect_gui then
        syn.protect_gui(screenGui)
        screenGui.Parent = game:GetService("CoreGui")
    elseif gethui then
        screenGui.Parent = gethui()
    else
        screenGui.Parent = game:GetService("CoreGui")
    end
    
    local mainWindow = createRoundFrame("MainWindow", size, position, screenGui)
    mainWindow.ClipsDescendants = true
    
    -- Заголовок окна
    local titleBar = createRoundFrame("TitleBar", UDim2.new(1, 0, 0, 40), UDim2.new(0, 0, 0, 0), mainWindow)
    titleBar.BackgroundColor3 = currentTheme.Accent
    
    -- Название окна справа
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(0.6, 0, 1, 0)
    titleLabel.Position = UDim2.new(0.3, 0, 0, 0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = title
    titleLabel.TextColor3 = currentTheme.Text
    titleLabel.TextSize = 16
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextXAlignment = Enum.TextXAlignment.Right
    titleLabel.ZIndex = 3
    titleLabel.Parent = titleBar
    
    -- Кнопка закрытия
    local closeButton = createRoundButton("CloseButton", UDim2.new(0, 28, 0, 28), UDim2.new(1, -32, 0.5, -14), titleBar)
    closeButton.BackgroundColor3 = Color3.fromRGB(220, 70, 70)
    
    local closeLabel = Instance.new("TextLabel")
    closeLabel.Size = UDim2.new(1, 0, 1, 0)
    closeLabel.Position = UDim2.new(0, 0, 0, 0)
    closeLabel.BackgroundTransparency = 1
    closeLabel.Text = "×"
    closeLabel.TextColor3 = currentTheme.Text
    closeLabel.TextSize = 18
    closeLabel.Font = Enum.Font.GothamBold
    closeLabel.ZIndex = 4
    closeLabel.Parent = closeButton
    
    closeButton.MouseButton1Click:Connect(function()
        toggleGUI() -- Используем функцию переключения
    end)
    
    -- Контентная область
    local contentFrame = createRoundFrame("Content", UDim2.new(1, -16, 1, -56), UDim2.new(0, 8, 0, 48), mainWindow)
    contentFrame.BackgroundColor3 = currentTheme.Secondary
    
    local scrollingFrame = Instance.new("ScrollingFrame")
    scrollingFrame.Size = UDim2.new(1, 0, 1, 0)
    scrollingFrame.Position = UDim2.new(0, 0, 0, 0)
    scrollingFrame.BackgroundTransparency = 1
    scrollingFrame.BorderSizePixel = 0
    scrollingFrame.ScrollBarThickness = 4
    scrollingFrame.ScrollBarImageColor3 = currentTheme.Accent
    scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
    scrollingFrame.ZIndex = 3
    scrollingFrame.Parent = contentFrame
    
    local uiListLayout = Instance.new("UIListLayout")
    uiListLayout.Padding = UDim.new(0, 8)
    uiListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    uiListLayout.Parent = scrollingFrame
    
    uiListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, uiListLayout.AbsoluteContentSize.Y + 16)
    end)
    
    -- Перетаскивание окна
    local dragging = false
    local dragInput, dragStart, startPos
    
    titleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = mainWindow.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    titleBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            mainWindow.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
    
    local tabSystem = {}
    local currentTab = nil
    local tabButtons = {}
    local tabContents = {}
    
    function tabSystem.New(tabConfig)
        local tabTitle = tabConfig.Title or "Tab"
        local tabId = #tabContents + 1
        
        -- Создаем кнопку таба
        local tabButton = createRoundButton("TabButton", UDim2.new(0, 90, 0, 32), UDim2.new(0, 10 + (95 * (#tabContents)), 0, 4), titleBar)
        tabButton.BackgroundColor3 = (#tabContents == 0) and currentTheme.Accent or currentTheme.Button
        
        local tabButtonLabel = Instance.new("TextLabel")
        tabButtonLabel.Size = UDim2.new(1, 0, 1, 0)
        tabButtonLabel.Position = UDim2.new(0, 0, 0, 0)
        tabButtonLabel.BackgroundTransparency = 1
        tabButtonLabel.Text = tabTitle
        tabButtonLabel.TextColor3 = currentTheme.Text
        tabButtonLabel.TextSize = 12
        tabButtonLabel.Font = Enum.Font.Gotham
        tabButtonLabel.ZIndex = 4
        tabButtonLabel.Parent = tabButton
        
        tabButton.MouseButton1Click:Connect(function()
            -- Показываем только выбранный таб
            for i, content in ipairs(tabContents) do
                content.Visible = (i == tabId)
            end
            -- Обновляем стиль кнопок
            for i, btn in ipairs(tabButtons) do
                btn.BackgroundColor3 = (i == tabId) and currentTheme.Accent or currentTheme.Button
            end
            currentTab = tabId
        end)
        
        -- Создаем контент таба
        local tabContent = Instance.new("ScrollingFrame")
        tabContent.Name = tabTitle
        tabContent.Size = UDim2.new(1, 0, 1, 0)
        tabContent.Position = UDim2.new(0, 0, 0, 0)
        tabContent.BackgroundTransparency = 1
        tabContent.BorderSizePixel = 0
        tabContent.ScrollBarThickness = 4
        tabContent.ScrollBarImageColor3 = currentTheme.Accent
        tabContent.CanvasSize = UDim2.new(0, 0, 0, 0)
        tabContent.Visible = (#tabContents == 0)
        tabContent.ZIndex = 3
        tabContent.Parent = scrollingFrame
        
        local tabListLayout = Instance.new("UIListLayout")
        tabListLayout.Padding = UDim.new(0, 8)
        tabListLayout.SortOrder = Enum.SortOrder.LayoutOrder
        tabListLayout.Parent = tabContent
        
        tabListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
            tabContent.CanvasSize = UDim2.new(0, 0, 0, tabListLayout.AbsoluteContentSize.Y + 16)
        end)
        
        table.insert(tabButtons, tabButton)
        table.insert(tabContents, tabContent)
        
        if #tabContents == 1 then
            currentTab = 1
        end
        
        local optionLibrary = {}
        
        function optionLibrary.Button(buttonConfig)
            return createButton(buttonConfig.Text, UDim2.new(1, -16, 0, 38), UDim2.new(0, 8, 0, 0), tabContent, buttonConfig.Callback)
        end
        
        function optionLibrary.Toggle(toggleConfig)
            return createToggle(toggleConfig.Text, UDim2.new(1, -16, 0, 38), UDim2.new(0, 8, 0, 0), tabContent, toggleConfig.Callback, toggleConfig.Enabled)
        end
        
        function optionLibrary.TextField(textFieldConfig)
            return createTextField(textFieldConfig.Text, UDim2.new(1, -16, 0, 38), UDim2.new(0, 8, 0, 0), tabContent, textFieldConfig.Callback, textFieldConfig.SetText)
        end
        
        return optionLibrary
    end
    
    -- Функция для показа/скрытия GUI
    local function setVisible(visible)
        screenGui.Enabled = visible
        if visible then
            mainWindow.Size = UDim2.new(0, 0, 0, 0)
            TweenService:Create(mainWindow, TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
                Size = size
            }):Play()
        else
            TweenService:Create(mainWindow, TweenInfo.new(0.2), {
                Size = UDim2.new(0, 0, 0, 0)
            }):Play()
            task.wait(0.2)
            screenGui.Enabled = false
        end
    end
    
    return {
        New = tabSystem.New,
        SetVisible = setVisible,
        ScreenGui = screenGui
    }
end

-- Глобальная функция для переключения GUI
function toggleGUI()
    if currentWindow then
        local currentState = currentWindow.ScreenGui.Enabled
        currentWindow.SetVisible(not currentState)
    end
end

-- Обработчик клавиши Alt
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    if input.KeyCode == Enum.KeyCode.LeftAlt or input.KeyCode == Enum.KeyCode.RightAlt then
        toggleGUI()
    end
end)

-- Создаем Material-совместимый интерфейс
local Material = {}

function Material.Load(config)
    local title = config.Title or "MaterialLua"
    local sizeX = config.SizeX or 480
    local sizeY = config.SizeY or 420
    local theme = config.Theme or "Dark"
    
    -- Позиция сверху по центру
    local position = UDim2.new(0.5, -sizeX/2, 0, 40)
    
    currentTheme = Themes[theme] or Themes.Dark
    
    local window = createWindow(title, UDim2.new(0, sizeX, 0, sizeY), position)
    currentWindow = window
    
    -- Сначала скрываем GUI
    window.SetVisible(false)
    
    -- Возвращаем совместимый с MaterialLua интерфейс
    return {
        New = function(tabConfig)
            return window.New(tabConfig)
        end
    }
end

return Material
